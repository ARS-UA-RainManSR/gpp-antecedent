model{

  # Likelihood
  for(i in 1:N){
    GPP[i] ~ dnorm(mu[i], tau)
    GPP.rep[i] ~ dnorm(mu[i], tau)
    
  # Mean model
  mu[i] = 
  B[1, trt[i]] +
  B[2, trt[i]] * PAR[i] +
  B[3, trt[i]] * Dant[i] +
  B[4, trt[i]] * W12ant[i, trt[i]] +
  B[5, trt[i]] * W25ant[i, trt[i]] +
  B[6, trt[i]] * PAR[i] * Dant[i] +
  B[7, trt[i]] * Dant[i] * W12ant[i, trt[i]] +
  B[8, trt[i]] * Dant[i] * W25ant[i, trt[i]] +
  B[9, trt[i]] * W12ant[i, trt[i]] * W25ant[i, trt[i]]
  
  # Antecedent variable is the sum across all timesteps
    Dant[i] <- sum(DTemp[i,]) # vector
    W12ant[i, trt[i]] <- sum(W12Temp[i, trt[i], ]) # matrix
    W25ant[i, trt[i]] <- sum(W25Temp[i, trt[i], ]) # matrix
  
  # Multiply weight by each timestep of covariate
  # Indexing tricks used to accomodate flexible time step size pA - pC
    for(k in 1:nlagA){
      DTemp[i,k] <- mean(Dmean[(doy[i]-k*pA+1):(doy[i]-k*pA+pA)])*wA[k]
    }
    
    for(j in 1:NTrt) {
      for(k in 1:nlagB){
        W12Temp[i,j,k] <- mean(W12[(doy[i]-k*pB+1):(doy[i]-k*pB+pB), j])*wB[k]
      }
    }
    
    for(j in 1:NTrt) {
      for(k in 1:nlagC){
        W25Temp[i,j,k] <- mean(W25[(doy[i]-k*pC+1):(doy[i]-k*pC+pC), j])*wC[k]
      }
    }
    
    
  # Part of the calculation of the posterior predictive loss	
    Sqdiff[i] <- pow(GPP.rep[i] - GPP[i],2)
  }
  
  # Sum of the deltas for each covariate
  sumA <- sum(deltaA[])
  sumB <- sum(deltaB[])
  sumC <- sum(deltaC[])
  
  # Compute Bayesian R2 value
  var.pred <- pow(sd(mu[]),2)
  var.resid <- 1/tau
  R2_resid <- var.pred/(var.pred + var.resid)
  
  # Priors for weights using the delta trick
  # Daily variable weights
  for(k in 1:nlagA){
    wA[k] <- deltaA[k] / sumA
    deltaA[k] ~ dgamma(alphaA[k], 1)
  }
  
  for(k in 1:nlagB){
    wB[k] <- deltaB[k] / sumB
    deltaB[k] ~ dgamma(alphaB[k], 1)
  }
  
  for(k in 1:nlagC){
    wC[k] <- deltaC[k] / sumC
    deltaC[k] ~ dgamma(alphaC[k], 1)
  }
  
  # Normal priors for regression parameters
  for(j in 1:NParam) { # Number of parameters in linear models
    for(k in 1:NTrt){
      B[j, k] ~ dnorm(0, 0.001)
    }
  }
  
  # Priors for variance terms
  tau ~ dgamma(0.1, 0.1)
  sig <- pow(tau, -0.5)
    
  # Posterior predictive loss is the posterior mean of Dsum
  Dsum <- sum(Sqdiff[])
  
}